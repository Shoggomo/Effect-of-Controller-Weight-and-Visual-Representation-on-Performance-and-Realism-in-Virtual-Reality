---
title: "Questionnaires"
format: 
  html: 
    toc: true
    embed-resources: true
editor: visual
---

# Preprocessing

## Setup

```{r message=FALSE}

# Suppress summarise info
options(dplyr.summarise.inform = FALSE)

rm(list = setdiff(ls(),"data_raw"))
library(tidyverse)
library(knitr)

```

## Read raw data

```{r message=FALSE}
# read data

data_raw <- read_csv("../data/questionnaire_acc.csv")

head(data_raw)
```

## define factors

```{r}
data_pp <- data_raw


# factors
data_pp <- data_pp %>%
  mutate(
    id = factor(participant_id),
    real_weight = factor(real_weight),
    virtual_weight = factor(virtual_weight)
  )
```

## overview data

```{r}
# inspect data distribution

ggplot(data_pp, aes(borg)) +
  geom_histogram(bins=12)
```

## Aggregate data

```{r}
# calculae prjq factors
data_long <- data_pp %>%
  group_by(id, real_weight, virtual_weight) %>%
  summarise(
    borg = borg,
    prjq_fac_1 = mean(c(q2, q9, q11, q17, q18, q32, q37, q38)),
    prjq_fac_2 = mean(c(q21, q36, q40, q54, q56, q60)),
    prjq_fac_3 = mean(c(q30, q48, q61, q70)),
  ) %>%
  ungroup()
```

## Restructure data

```{r}

# create wide from long

data_wide <- pivot_wider(data_long,
  names_from = c(real_weight, virtual_weight),
  values_from = c(borg, prjq_fac_1, prjq_fac_2, prjq_fac_3),
  names_sep = "_"
)
```

# Statistical Analyses

## Setup libraries and functions

```{r message=FALSE}
library(rstatix)
library(psych)
library(effectsize)
library(knitr)
library(psychReport)
library(MetBrewer)
library(viridis)
library(ggsci)
library(ggpubr)
```

## Preprocessing descriptives and mean performance

```{r}
descriptives <- describe(data_wide)
kable(descriptives, digits = 2)
```

## Analyses of PRJQ

### Visualize all Factors

```{r}

# my_lineplot <- function(data, x, y, title, group, xlab, ylab, grouplab, xticklabs, groupticklabs) {
#   barplot <- ggbarplot(
#       data,
#       x = x,
#       y = y,
#       fill = group,
#       add = "mean_ci",
#       ci = 0.95,
#       ylab = ylab,
#       #title = title,
#       #size = 1,
#       position = position_dodge(width = 0.80), 
#     ) + 
#     theme(
#       axis.title.x = element_blank(),
#       text = element_text(size = 16)
#     ) +
#     labs(
#       fill=grouplab,
#     ) +
#     grids(linetype = "dashed") +
#     scale_x_discrete(labels=xticklabs) + 
#     scale_fill_discrete(type=c("#EE442F", "#63ACBE"), labels=groupticklabs) +
#     scale_shape_discrete(labels=groupticklabs) + 
#     scale_linetype_discrete(labels=groupticklabs) 
#   return(barplot)
# }
my_lineplot <- function(data, x, y, group, title, xlab, ylab, grouplab, xticklabs, groupticklabs) {
  lineplot <- ggline(
    data,
    x = x, 
    y = y, 
    color = group,
    linetype = group,
    shape = group,
    add = "mean_ci",
    ci = 0.95,
    #title = title,
    xlab = xlab,
    ylab = ylab,
    size = 1,
    position = position_dodge(width = 0.10), 
  ) + 
  theme(
    legend.position = "right", 
    legend.direction = "vertical",
    axis.title.y = element_text(margin = margin(r = 10)),
    text = element_text(size = 16)
  ) +
  labs(
    color=grouplab,
    linetype=grouplab,
    shape=grouplab
  ) +
  grids(linetype = "dashed") +
  scale_x_discrete(labels=xticklabs) + 
  scale_color_discrete(type=c("#EE442F", "#63ACBE"), labels=groupticklabs) +
  scale_shape_discrete(labels=groupticklabs) + 
  scale_linetype_discrete(labels=groupticklabs) 
  
    
  return(lineplot)
}

line_fac_1 <- my_lineplot(data_long,
    x = "real_weight",
    y = "prjq_fac_1",
    group = "virtual_weight",
    title = NULL,
    ylab = "Reality\njudgment",
    xlab = "",
    grouplab = "Visual Representation",
    xticklabs = c("Heavy Control.", "Light Control."),
    groupticklabs = c("Heavy Model", "Light Model")
    )

line_fac_2 <- my_lineplot(data_long,
    x = "real_weight",
    y = "prjq_fac_2",
    group = "virtual_weight",
    title = NULL,
    ylab = "Internal / external\ncorrespondence",
    xlab = "",
    grouplab = "Visual Representation",
    xticklabs = c("Heavy Control.", "Light Control."),
    groupticklabs = c("Heavy Model", "Light Model")
    )

line_fac_3 <- my_lineplot(data_long,
    x = "real_weight",
    y = "prjq_fac_3",
    group = "virtual_weight",
    title = NULL,
    ylab = "Attention /\nabsorption",
    xlab = "",
    grouplab = "Visual Representation",
    xticklabs = c("Heavy Control.", "Light Control."),
    groupticklabs = c("Heavy Model", "Light Model")
    )

#title_plot <- text_grob("Results of PRJQ Factors 1 to 3", size = 16) %>% as_ggplot()

#arranged_plot <- ggarrange(NULL, title_plot, NULL, line_fac_1, line_fac_2, line_fac_3, nrow = 2, ncol = 3, heights = c(1,3), legend = "bottom", common.legend = TRUE) +
#  coord_fixed(ratio = 0.4) + 
#  theme(plot.margin = unit(c(-7, 0, -7, 0), "cm"))

arranged_plot <- ggarrange(line_fac_1, line_fac_2, line_fac_3, nrow = 3, ncol = 1, legend = "right", common.legend = TRUE, heights = c(3, 3, 3))

ggsave(filename = "prjq_figure.png", plot = arranged_plot)

arranged_plot
```

### Summarize all Factors

#### PRJQ Factor 1

```{r}
data_long %>%
  group_by(real_weight, virtual_weight) %>%
  get_summary_stats(prjq_fac_1, type = "full", show = c("n", "mean", "sd", "ci"))
```

#### PRJQ Factor 2

```{r}
data_long %>%
  group_by(real_weight, virtual_weight) %>%
  get_summary_stats(prjq_fac_2, type = "full", show = c("n", "mean", "sd", "ci"))
```

#### PRJQ Factor 3

```{r}
data_long %>%
  group_by(real_weight, virtual_weight) %>%
  get_summary_stats(prjq_fac_3, type = "full", show = c("n", "mean", "sd", "ci"))
```

### 2 x 2 repeated measures ANOVA

#### PRJQ Factor 1

```{r}
rt_model <- data_long %>% 
  rstatix::anova_test(dv = prjq_fac_1,
                         wid = id,
                         within = c(real_weight, virtual_weight),
                         type = 3,
                         effect.size = "pes")

kable(rt_model)
```

#### PRJQ Factor 2

```{r}
rt_model <- data_long %>% 
  rstatix::anova_test(dv = prjq_fac_2,
                         wid = id,
                         within = c(real_weight, virtual_weight),
                         type = 3,
                         effect.size = "pes")

kable(rt_model)

```

#### PRJQ Factor 3

```{r}
rt_model <- data_long %>% 
  rstatix::anova_test(dv = prjq_fac_3,
                         wid = id,
                         within = c(real_weight, virtual_weight),
                         type = 3,
                         effect.size = "pes")

kable(rt_model)

```

## Analyses of BORG

### Visualize

```{r}
lineplot <- my_lineplot(data_long,
    x = "real_weight",
    y = "borg",
    group = "virtual_weight",
    title = "Percieved exhaustion via BORG (better name needed)",
    ylab = "BORG Score",
    xlab = "Controller",
    grouplab = "Visual Representation",
    xticklabs = c("Heavy Control.", "Light Control."),
    groupticklabs = c("Heavy Model", "Light Model")
    ) + 
  theme(
    legend.position = "right", 
    legend.direction = "vertical",
    axis.title.y = element_text(margin = margin(r = 10))
  )

ggsave(filename = "borg_figure.png", plot = lineplot)

lineplot
```

### Summarize

```{r}
data_long %>%
  group_by(real_weight, virtual_weight) %>%
  get_summary_stats(borg, type = "full", show = c("n", "mean", "sd", "ci"))
```

### 2 x 2 repeated measures ANOVA

```{r}
rt_model <- data_long %>% 
  rstatix::anova_test(dv = borg,
                         wid = id,
                         within = c(real_weight, virtual_weight),
                         type = 3,
                         effect.size = "pes")

kable(rt_model)
```
